#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$(dirname "$0")/config"
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"
source "$PLUGIN_AVAILABLE_PATH/config/functions"
source "$PLUGIN_AVAILABLE_PATH/domains/functions"
source "$PLUGIN_AVAILABLE_PATH/nginx-vhost/functions"

set_token() {
  local TOKEN=$1
  [[ ! -n "$TOKEN" ]] && dokku_log_fail "TOKEN must not be null"
  config_set --global CLOUDFLARE_TOKEN $TOKEN
}

set_email() {
  local EMAIL=$1
  [[ ! -n "$EMAIL" ]] && dokku_log_fail "EMAIL must not be null"
  config_set --global CLOUDFLARE_EMAIL $EMAIL
}

set_zone() {
  local ZONE=$1
  [[ ! -n "$ZONE" ]] && dokku_log_fail "ZONE must not be null"
  config_set --global CLOUDFLARE_ZONE $ZONE
}

create_subdomain_record() {
  eval "$(config_export global)"
  [[ "$CLOUDFLARE_ZONE" == "!notset" ]] dokku_log_fail "A ZONE must be set before using this plugin"
  [[ "$CLOUDFLARE_EMAIL" == "!notset" ]] dokku_log_fail "A EMAIL must be set before using this plugin"
  [[ "$CLOUDFLARE_TOKEN" == "!notset" ]] dokku_log_fail "A TOKEN must be set before using this plugin"
  local APP=$1
  verify_app_name $APP
  dokku_log_info1 "Checking if app vhost enabled for $APP"
  [[ "$(is_app_vhost_enabled $APP)" == "false" ]] && return 0

  local PUBLIC_IP=`curl http://icanhazip.com`
  for domain in $(get_app_domains $APP | xargs); do
    dokku_log_info2 "attempting to create entry for $domain"
    curl https://www.cloudflare.com/api_json.html \
      -d 'a=rec_new' \
      -d "tkn=$CLOUDFLARE_TOKEN" \
      -d "email=$CLOUDFLARE_EMAIL" \
      -d "z=$CLOUDFLARE_ZONE" \
      -d 'type=A' \
      -d "name=$domain" \
      -d "content=$PUBLIC_IP" \
      -d 'ttl=1'
    dokku_log_info2 "... done." # TODO: parse the result and indicate success/failure
  done
}

list_records_for_zone() {
  curl https://www.cloudflare.com/api_json.html \
    -d 'a=rec_load_all' \
    -d "tkn=$CLOUDFLARE_TOKEN" \
    -d "email=$CLOUDFLARE_EMAIL" \
    -d "z=$CLOUDFLARE_ZONE"
}

update_subdomain_record() {
    # TODO: impl ........
    curl https://www.cloudflare.com/api_json.html \
    -d 'a=rec_edit' \
    -d "tkn=$CLOUDFLARE_TOKEN" \
    -d "email=$CLOUDFLARE_EMAIL" \
    -d "z=$CLOUDFLARE_ZONE" \
    -d "id=$record_id"
    -d 'type=A' \
    -d "name=$domain" \
    -d "content=$PUBLIC_IP" \
    -d 'ttl=1'
}
